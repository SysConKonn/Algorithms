#include <cstdio>
#include <algorithm> 
#include <cstring>
#include <cmath>
#define MAX_N 230
#define INF 1e8
using namespace std;
int T, N;
int matr[16][16], A[MAX_N][MAX_N], B[MAX_N];
int free_x[MAX_N];


void cal() {
  
}

void print_false() {
  printf("inf\n");
}

int check_ () {
  for(int i = 1;i <= N; ++i) {
    int sum = 0;
    for(int j = 1;j <= N; ++j) if(A[i][j] == 0) sum++;
    if(sum == N && B[i] == 1) return 1;
  }
  return 0;
}

void gauss () {
  memset(free_x, 0, sizeof(free_x));
  for(int i = 1;i <= N * N; ++i) {
    int k = i;
    for (int j = i+1; j <= N * N; ++j)
      if (A[j][i] > A[k][i]) k = j;
    if(A[k][i] == 0) free_x[i] = 1;
    if (k != i){
      for (int j = 1; j <= N * N ; ++j) std::swap(A[i][j], A[k][j]);
      std::swap(B[i], B[k]);
    }
    
    for(int j = i + 1;j <= N * N; ++j) {
      if(A[j][i] == 0) continue;
      for(int k = 1;k <= N; ++k)
	A[j][k] ^= A[i][k];
      B[j] ^= B[i];
    }
  }
  if(check_() == 1) print_false();
  else cal();
}

void solve() {
  for (int i = 1;i <= N; ++i) 
    for (int j = 1;j <= N; ++j) 
      for (int k1 = -1;k1 <= 1; ++k1)
	for (int k2 = -1;k2 <= 1; ++k2)
	  if ((i + k1 > 0 && i + k1 <= N && j + k2 > 0 && j + k2 <= N) && (k1 == 0 || k2 == 0))
	    A[matr[i + k1][j + k2]][matr[i][j]] = 1;
  /*
  for (int i = 1;i <= N * N; ++i) {
    for (int j = 1;j <= N * N; ++j) printf("%d ", A[i][j]);
    printf("%d\n", B[i]);
  }
  */

  
}

void Read () {
  int c;
  for (int i = 1;i <= N; ++i) {
    c = getchar();
    for (int j = 1;j <= N; ++j) {
      c = getchar();
      if (c == 'w') B[matr[i][j]] = 1;
    }
  }
  for (int i = 1;i <= N * N; ++i) printf("%d ", B[i]);
  printf("\n");
}

void init() {
  int sum = 1;
  for (int i = 1;i <= N; ++i)
    for (int j = 1;j <= N; ++j)
      matr[i][j] = sum++;
}

int main () {
  scanf("%d", &T);
  while (T--) {
    scanf("%d", &N);
    init();
    Read();
    solve();
  }
  return 0;
}
