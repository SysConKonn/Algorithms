#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>f
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

#+TITLE: 一些题目
#+AUTHOR: SysCon

 <2018-03-09 五>

* Problem 1
*UVa11992 排列变换* \\

原题地址：蓝书P_242

给出一个长度为N的序列，然后接下来有M个操作。  

每个指令(a, b)表示将序列中一段区间[a, b]的数字进行翻转。  

最后输出翻转M的序列。 

比如说给出N，初始序列， M， 以及M个操作如下：

*Sample Input*  

7  

1 2 3 4 5 6 7 

3  

1 3   

2 4   

5 7   

*Sample Output* \\

3 4 1 2 7 6 5  \\




* Problem 2
*BZOJ1208 宠物收养所* 

原题地址http://www.lydsy.com/JudgeOnline/problem.php?id=1208

*Description*

最近，阿Q开了一间宠物收养所。收养所提供两种服务：收养被主人遗弃的宠物和让新的主人领养这些宠物。

每个领养者都希望领养到自己满意的宠物，阿Q根据领养者的要求通过他自己发明的一个特殊的公式，

得出该领养者希望领养的宠物的特点值a（a是一个正整数，a<2^31 ），而他也给每个处在收养所的宠物一个特点值。

这样他就能够很方便的处理整个领养宠物的过程了，宠物收养所总是会有两种情况发生：

被遗弃的宠物过多或者是想要收养宠物的人太多，而宠物太少。 

*1* ． 被遗弃的宠物过多时，假若到来一个领养者，这个领养者希望领养的宠物的特点值为a，那么它将会领养一只目前未被领养的宠物中特点值最接近a的一只宠物。

（任何两只宠物的特点值都不可能是相同的，任何两个领养者的希望领养宠物的特点值也不可能是一样的）如果有两只满足要求的宠物，

即存在两只宠物他们的特点值分别为a-b和a+b，那么领养者将会领养特点值为a-b的那只宠物。 

*2* ． 收养宠物的人过多，假若到来一只被收养的宠物，那么哪个领养者能够领养它呢？能够领养它的领养者，是那个希望被领养宠物的特点值最接近该宠物特点值的领养者，

如果该宠物的特点值为a，存在两个领养者他们希望领养宠物的特点值分别为a-b和a+b，

那么特点值为a-b的那个领养者将成功领养该宠物。 

一个领养者领养了一个特点值为a的宠物，而它本身希望领养的宠物的特点值为b，那么这个领养者的不满意程度为abs(a-b)。

【任务描述】你得到了一年当中，领养者和被收养宠物到来收养所的情况，希望你计算所有收养了宠物的领养者的不满意程度的总和。

这一年初始时，收养所里面既没有宠物，也没有领养者。

*Input*

第一行为一个正整数n，n<=80000，表示一年当中来到收养所的宠物和领养者的总数。

接下来的n行，按到来时间的先后顺序描述了一年当中来到收养所的宠物和领养者的情况。

每行有两个正整数a, b，其中a=0表示宠物，a=1表示领养者，b表示宠物的特点值或是领养者希望领养宠物的特点值。

（同一时间呆在收养所中的，要么全是宠物，要么全是领养者，这些宠物和领养者的个数不会超过10000个）

*Output*

仅有一个正整数，表示一年当中所有收养了宠物的领养者的不满意程度的总和mod 1000000以后的结果。

*Sample Input*

5

0 2

0 4

1 3

1 2

1 5


*Sample Output*

3
(abs(3-2) + abs(2-4)=3，最后一个领养者没有宠物可以领养)



* Problem 3
*BZOJ1500 维修数列* \\
原题地址http://www.lydsy.com/JudgeOnline/problem.php?id=1500。

*Description*

请写一个程序，要求维护一个数列，支持以下 6 种操作：

1. 插入 INSERT pos_i tot c_1 c_2 ... c_tot    在当前数列的第pos_i 个数字后插入tot个数c_1 ~　c_tot。  

2. 删除 DELETE pos_i tot    删除从序列第pos_i 个数字开始的连续tot个数字。  

3. 修改 MAKE-SAME pos_i tot c   将从第pos_i 个数字开始的连续tot个数字全都改成c。

4. 翻转 REVERSE pos_i tot   取出当前数列的第pos_i 个位置开始的连续tot个数字并且将他们翻转后放回原位置。  

5. 求和 GET-SUM pos_i tot   计算从序列第pos_i 个位置开始的连续tot个数字的和。 

6. 求 和最大的子列  MAX-SUM   求出当前数列中和最大的一段连续子列，并且输出最大和。  

*Input*

输入的第1 行包含两个数N 和M(M ≤20 000)，N 表示初始时数列中数的个数，M表示要进行的操作数目。

第2行包含N个数字，描述初始时的数列。

以下M行，每行一条命令，格式参见问题描述中的表格。

任何时刻数列中最多含有500 000个数，数列中任何一个数字均在[-1 000, 1 000]内。

插入的数字总数不超过4 000 000个，输入文件大小不超过20MBytes。

*Output*

对于输入数据中的GET-SUM和MAX-SUM操作，向输出文件依次打印结果，每个答案（数字）占一行。

*Sample Input*

9 8

2 -6 3 5 1 -5 -3 6 3

GET-SUM 5 4

MAX-SUM

INSERT 8 3 -5 7 2

DELETE 12 1

MAKE-SAME 3 3 2

REVERSE 3 6

GET-SUM 5 4

MAX-SUM

*Sample Output*

-1

10

1

10

* Problem 4
原题地址:http://www.lydsy.com/JudgeOnline/problem.php?id=1014

*Description*

　　火星人最近研究了一种操作：求一个字串两个后缀的公共前缀。比方说，有这样一个字符串：madamimadam，

我们将这个字符串的各个字符予以标号：序号： 1 2 3 4 5 6 7 8 9 10 11 字符 m a d a m i m a d a m 现在，

火星人定义了一个函数LCQ(x, y)，表示：该字符串中第x个字符开始的字串，与该字符串中第y个字符开始的字串

，两个字串的公共前缀的长度。比方说，LCQ(1, 7) = 5, LCQ(2, 10) = 1, LCQ(4, 7) = 0 在研究LCQ函数的过程

中，火星人发现了这样的一个关联：如果把该字符串的所有后缀排好序，就可以很快地求出LCQ函数的值；同样，

如果求出了LCQ函数的值，也可以很快地将该字符串的后缀排好序。 尽管火星人聪明地找到了求取LCQ函数的快速

算法，但不甘心认输的地球人又给火星人出了个难题：在求取LCQ函数的同时，还可以改变字符串本身。具体地说

，可以更改字符串中某一个字符的值，也可以在字符串中的某一个位置插入一个字符。地球人想考验一下，在如此

复杂的问题中，火星人是否还能够做到很快地求取LCQ函数的值。

*Input*

　　第一行给出初始的字符串。第二行是一个非负整数M，表示操作的个数。接下来的M行，每行描述一个操作。操

作有3种，如下所示

1、询问。语法：Qxy，x,y均为正整数。功能：计算LCQ(x,y)限制：1<=x,y<=当前字符串长度。

2、修改。语法：Rxd，x是正整数，d是字符。功能：将字符串中第x个数修改为字符d。限制：x不超过当前字

符串长度。

3、插入：语法：Ixd，x是非负整数，d是字符。功能：在字符串第x个字符之后插入字符d，如果x=0，则在字

符串开头插入。限制：x不超过当前字符串长度

*Output*

　　对于输入文件中每一个询问操作，你都应该输出对应的答案。一个答案一行。

*Sample Input*

madamimadam
7


Q 1 7

Q 4 8

Q 10 11

R 3 a

Q 1 7

I 10 a

Q 2 11


*Sample Output*

5

1

0

2

1

*HINT*

1、所有字符串自始至终都只有小写字母构成。

2、M<=150,000

3、字符串长度L自始至终都满足L<=100,000

4、询问操作的个数不超过10,000个。

对于第1，2个数据，字符串长度自始至终都不超过1,000

对于第3，4，5个数据，没有插入操作。



*Emacs 25.3.1 (Org mode 8.2.10)*
